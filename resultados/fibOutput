1 function int _fibonacci(int _n) {
              [0001,0001] (0007,               PR_FN) {function}
              [0001,0002] (0010,              PR_INT) {int}
              [0001,0003] (0001,                  ID) {_fibonacci}
              [0001,0004] (0047,              OP_PAR) {(}
              [0001,0005] (0010,              PR_INT) {int}
              [0001,0006] (0001,                  ID) {_n}
              [0001,0007] (0048,              CL_PAR) {)}
              [0001,0008] (0045,           OP_CHAVES) {{}
2     if( _n < 2 ) {
              [0002,0001] (0017,               PR_IF) {if}
              [0002,0002] (0047,              OP_PAR) {(}
              [0002,0003] (0001,                  ID) {_n}
              [0002,0004] (0037,           OPR_MENOR) {<}
              [0002,0005] (0002,              CT_INT) {2}
              [0002,0006] (0048,              CL_PAR) {)}
              [0002,0007] (0045,           OP_CHAVES) {{}
3         return _n;    
              [0003,0001] (0008,           PR_RETURN) {return}
              [0003,0002] (0001,                  ID) {_n}
              [0003,0003] (0052,             S_PVIRG) {;}
4     }
              [0004,0001] (0046,           CL_CHAVES) {}}
5 
6     return _fibonacci(_n - 1) + _fibonacci(_n - 2);
              [0006,0001] (0008,           PR_RETURN) {return}
              [0006,0002] (0001,                  ID) {_fibonacci}
              [0006,0003] (0047,              OP_PAR) {(}
              [0006,0004] (0001,                  ID) {_n}
              [0006,0005] (0029,             OPR_SUB) {-}
              [0006,0006] (0002,              CT_INT) {1}
              [0006,0007] (0048,              CL_PAR) {)}
              [0006,0008] (0028,             OPR_ADD) {+}
              [0006,0009] (0001,                  ID) {_fibonacci}
              [0006,0010] (0047,              OP_PAR) {(}
              [0006,0011] (0001,                  ID) {_n}
              [0006,0012] (0029,             OPR_SUB) {-}
              [0006,0013] (0002,              CT_INT) {2}
              [0006,0014] (0048,              CL_PAR) {)}
              [0006,0015] (0052,             S_PVIRG) {;}
7 }
              [0007,0001] (0046,           CL_CHAVES) {}}
8 
9 function main() {
              [0009,0001] (0007,               PR_FN) {function}
              [0009,0002] (0006,             PR_MAIN) {main}
              [0009,0003] (0047,              OP_PAR) {(}
              [0009,0004] (0048,              CL_PAR) {)}
              [0009,0005] (0045,           OP_CHAVES) {{}
10     
11     int _n, _total;
              [0011,0001] (0010,              PR_INT) {int}
              [0011,0002] (0001,                  ID) {_n}
              [0011,0003] (0051,              S_VIRG) {,}
              [0011,0004] (0001,                  ID) {_total}
              [0011,0005] (0052,             S_PVIRG) {;}
12     SysOut("Digite o número limite desejado");
              [0012,0001] (0016,           PR_SYSOUT) {SysOut}
              [0012,0002] (0047,              OP_PAR) {(}
              [0012,0004] (0004,           CT_STRING) {"Digite o número limite desejado"}
              [0012,0005] (0048,              CL_PAR) {)}
              [0012,0006] (0052,             S_PVIRG) {;}
13     SysIn(_n);
              [0013,0001] (0015,            PR_SYSIN) {SysIn}
              [0013,0002] (0047,              OP_PAR) {(}
              [0013,0003] (0001,                  ID) {_n}
              [0013,0004] (0048,              CL_PAR) {)}
              [0013,0005] (0052,             S_PVIRG) {;}
14 
15     int _i;
              [0015,0001] (0010,              PR_INT) {int}
              [0015,0002] (0001,                  ID) {_i}
              [0015,0003] (0052,             S_PVIRG) {;}
16     for(_i = 0, _n) {
              [0016,0001] (0021,              PR_FOR) {for}
              [0016,0002] (0047,              OP_PAR) {(}
              [0016,0003] (0001,                  ID) {_i}
              [0016,0004] (0033,           OPR_IGUAL) {=}
              [0016,0005] (0002,              CT_INT) {0}
              [0016,0006] (0051,              S_VIRG) {,}
              [0016,0007] (0001,                  ID) {_n}
              [0016,0008] (0048,              CL_PAR) {)}
              [0016,0009] (0045,           OP_CHAVES) {{}
17         _total = _fibonacci(_i);
              [0017,0001] (0001,                  ID) {_total}
              [0017,0002] (0033,           OPR_IGUAL) {=}
              [0017,0003] (0001,                  ID) {_fibonacci}
              [0017,0004] (0047,              OP_PAR) {(}
              [0017,0005] (0001,                  ID) {_i}
              [0017,0006] (0048,              CL_PAR) {)}
              [0017,0007] (0052,             S_PVIRG) {;}
18         if(_i == _n - 1) {
              [0018,0001] (0017,               PR_IF) {if}
              [0018,0002] (0047,              OP_PAR) {(}
              [0018,0003] (0001,                  ID) {_i}
              [0018,0004] (0035,          OPR_DIGUAL) {==}
              [0018,0005] (0001,                  ID) {_n}
              [0018,0006] (0029,             OPR_SUB) {-}
              [0018,0007] (0002,              CT_INT) {1}
              [0018,0008] (0048,              CL_PAR) {)}
              [0018,0009] (0045,           OP_CHAVES) {{}
19             SysOut(_total);
              [0019,0001] (0016,           PR_SYSOUT) {SysOut}
              [0019,0002] (0047,              OP_PAR) {(}
              [0019,0003] (0001,                  ID) {_total}
              [0019,0004] (0048,              CL_PAR) {)}
              [0019,0005] (0052,             S_PVIRG) {;}
20         } else {
              [0020,0001] (0046,           CL_CHAVES) {}}
              [0020,0002] (0019,             PR_ELSE) {else}
              [0020,0003] (0045,           OP_CHAVES) {{}
21             SysOut(_total + ", ");
              [0021,0001] (0016,           PR_SYSOUT) {SysOut}
              [0021,0002] (0047,              OP_PAR) {(}
              [0021,0003] (0001,                  ID) {_total}
              [0021,0004] (0028,             OPR_ADD) {+}
              [0021,0006] (0004,           CT_STRING) {", "}
              [0021,0007] (0048,              CL_PAR) {)}
              [0021,0008] (0052,             S_PVIRG) {;}
22         }
              [0022,0001] (0046,           CL_CHAVES) {}}
23     }
              [0023,0001] (0046,           CL_CHAVES) {}}
24 }
              [0024,0001] (0046,           CL_CHAVES) {}}
              [0024,0001] (0000,                 EOF) {EOF}
