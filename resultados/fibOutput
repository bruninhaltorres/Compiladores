0001  function main() {
              [0001,0001] (0007,               PR_FN) {function}
              [0001,0010] (0006,             PR_MAIN) {main}
              [0001,0014] (0047,              OP_PAR) {(}
              [0001,0015] (0048,              CL_PAR) {)}
              [0001,0017] (0045,           OP_CHAVES) {{}
0002      int _n, _total;
              [0002,0005] (0010,              PR_INT) {int}
              [0002,0009] (0001,                  ID) {_n}
              [0002,0011] (0051,              S_VIRG) {,}
              [0002,0013] (0001,                  ID) {_total}
              [0002,0019] (0052,             S_PVIRG) {;}
0003      SysOut("Digite o número limite desejado");
              [0003,0005] (0016,           PR_SYSOUT) {SysOut}
              [0003,0011] (0047,              OP_PAR) {(}
              [0003,0012] (0004,           CT_STRING) {"Digite o número limite desejado"}
              [0003,0045] (0048,              CL_PAR) {)}
              [0003,0046] (0052,             S_PVIRG) {;}
0004      SysIn(_n);
              [0004,0005] (0015,            PR_SYSIN) {SysIn}
              [0004,0010] (0047,              OP_PAR) {(}
              [0004,0011] (0001,                  ID) {_n}
              [0004,0013] (0048,              CL_PAR) {)}
              [0004,0014] (0052,             S_PVIRG) {;}
0005  
0006      int _x1 = 0;
              [0006,0005] (0010,              PR_INT) {int}
              [0006,0009] (0001,                  ID) {_x1}
              [0006,0013] (0033,           OPR_IGUAL) {=}
              [0006,0014] (0002,              CT_INT) {0}
              [0006,0015] (0052,             S_PVIRG) {;}
0007      int _x2 = 1;
              [0007,0005] (0010,              PR_INT) {int}
              [0007,0009] (0001,                  ID) {_x2}
              [0007,0013] (0033,           OPR_IGUAL) {=}
              [0007,0014] (0002,              CT_INT) {1}
              [0007,0015] (0052,             S_PVIRG) {;}
0008  
0009      SysOut("Série de Fibonacci até " + _n + ": "_x1 + ", " + _x2 ", ");
              [0009,0005] (0016,           PR_SYSOUT) {SysOut}
              [0009,0011] (0047,              OP_PAR) {(}
              [0009,0012] (0004,           CT_STRING) {"Série de Fibonacci até "}
              [0009,0038] (0028,             OPR_ADD) {+}
              [0009,0040] (0001,                  ID) {_n}
              [0009,0043] (0028,             OPR_ADD) {+}
              [0009,0045] (0004,           CT_STRING) {": "}
              [0009,0049] (0001,                  ID) {_x1}
              [0009,0053] (0028,             OPR_ADD) {+}
              [0009,0055] (0004,           CT_STRING) {", "}
              [0009,0060] (0028,             OPR_ADD) {+}
              [0009,0062] (0001,                  ID) {_x2}
              [0009,0066] (0004,           CT_STRING) {", "}
              [0009,0070] (0048,              CL_PAR) {)}
              [0009,0071] (0052,             S_PVIRG) {;}
0010      int _next = _x1 + _x2;
              [0010,0005] (0010,              PR_INT) {int}
              [0010,0009] (0001,                  ID) {_next}
              [0010,0015] (0033,           OPR_IGUAL) {=}
              [0010,0016] (0001,                  ID) {_x1}
              [0010,0020] (0028,             OPR_ADD) {+}
              [0010,0022] (0001,                  ID) {_x2}
              [0010,0025] (0052,             S_PVIRG) {;}
0011  
0012      while (_next <= _n) { 
              [0012,0005] (0020,            PR_WHILE) {while}
              [0012,0011] (0047,              OP_PAR) {(}
              [0012,0012] (0001,                  ID) {_next}
              [0012,0018] (0040,         OPR_MENORIG) {<=}
              [0012,0020] (0001,                  ID) {_n}
              [0012,0022] (0048,              CL_PAR) {)}
              [0012,0024] (0045,           OP_CHAVES) {{}
0013          if (_x1 + _x2 > _n) {
              [0013,0009] (0017,               PR_IF) {if}
              [0013,0012] (0047,              OP_PAR) {(}
              [0013,0013] (0001,                  ID) {_x1}
              [0013,0017] (0028,             OPR_ADD) {+}
              [0013,0019] (0001,                  ID) {_x2}
              [0013,0023] (0036,           OPR_MAIOR) {>}
              [0013,0024] (0001,                  ID) {_n}
              [0013,0026] (0048,              CL_PAR) {)}
              [0013,0028] (0045,           OP_CHAVES) {{}
0014              SysOut(_next); #Último elemento da sequência
              [0014,0013] (0016,           PR_SYSOUT) {SysOut}
              [0014,0019] (0047,              OP_PAR) {(}
              [0014,0020] (0001,                  ID) {_next}
              [0014,0025] (0048,              CL_PAR) {)}
              [0014,0026] (0052,             S_PVIRG) {;}
0015          } else {
              [0015,0009] (0046,           CL_CHAVES) {}}
              [0015,0011] (0019,             PR_ELSE) {else}
              [0015,0016] (0045,           OP_CHAVES) {{}
0016              SysOut(_next + ", ");
              [0016,0013] (0016,           PR_SYSOUT) {SysOut}
              [0016,0019] (0047,              OP_PAR) {(}
              [0016,0020] (0001,                  ID) {_next}
              [0016,0026] (0028,             OPR_ADD) {+}
              [0016,0028] (0004,           CT_STRING) {", "}
              [0016,0032] (0048,              CL_PAR) {)}
              [0016,0033] (0052,             S_PVIRG) {;}
0017          }
              [0017,0009] (0046,           CL_CHAVES) {}}
0018          _x1 = _x2;
              [0018,0009] (0001,                  ID) {_x1}
              [0018,0013] (0033,           OPR_IGUAL) {=}
              [0018,0014] (0001,                  ID) {_x2}
              [0018,0017] (0052,             S_PVIRG) {;}
0019          _x2 = _next;
              [0019,0009] (0001,                  ID) {_x2}
              [0019,0013] (0033,           OPR_IGUAL) {=}
              [0019,0014] (0001,                  ID) {_next}
              [0019,0019] (0052,             S_PVIRG) {;}
0020          _next = _x1 + _x2;
              [0020,0009] (0001,                  ID) {_next}
              [0020,0015] (0033,           OPR_IGUAL) {=}
              [0020,0016] (0001,                  ID) {_x1}
              [0020,0020] (0028,             OPR_ADD) {+}
              [0020,0022] (0001,                  ID) {_x2}
              [0020,0025] (0052,             S_PVIRG) {;}
0021      }
              [0021,0005] (0046,           CL_CHAVES) {}}
0022  }
              [0022,0001] (0046,           CL_CHAVES) {}}
              [0022,0002] (0000,                 EOF) {EOF}
