1 #### OPERAÇÕES ####
2 
3 function int _operacao(int _a, int _b){
[0003,0001] (0007,               PR_FN) {function}
[0003,0002] (0010,              PR_INT) {int}
[0003,0003] (0001,                  ID) {_operacao}
[0003,0004] (0047,              OP_PAR) {(}
[0003,0005] (0010,              PR_INT) {int}
[0003,0006] (0001,                  ID) {_a}
[0003,0007] (0051,              S_VIRG) {,}
[0003,0008] (0010,              PR_INT) {int}
[0003,0009] (0001,                  ID) {_b}
[0003,0010] (0048,              CL_PAR) {)}
[0003,0011] (0045,           OP_CHAVES) {{}
4     int _d = 5;
[0004,0001] (0010,              PR_INT) {int}
[0004,0002] (0001,                  ID) {_d}
[0004,0003] (0034,           OPR_IGUAL) {=}
[0004,0004] (0002,              CT_INT) {5}
[0004,0005] (0052,             S_PVIRG) {;}
5 
6     _d = _d + 1;
[0006,0001] (0001,                  ID) {_d}
[0006,0002] (0034,           OPR_IGUAL) {=}
[0006,0003] (0001,                  ID) {_d}
[0006,0004] (0029,             OPR_ADD) {+}
[0006,0005] (0002,              CT_INT) {1}
[0006,0006] (0052,             S_PVIRG) {;}
7     _d = _d - 1;
[0007,0001] (0001,                  ID) {_d}
[0007,0002] (0034,           OPR_IGUAL) {=}
[0007,0003] (0001,                  ID) {_d}
[0007,0004] (0030,             OPR_SUB) {-}
[0007,0005] (0002,              CT_INT) {1}
[0007,0006] (0052,             S_PVIRG) {;}
8     _d = _d * 1;
[0008,0001] (0001,                  ID) {_d}
[0008,0002] (0034,           OPR_IGUAL) {=}
[0008,0003] (0001,                  ID) {_d}
[0008,0004] (0031,            OPR_MULT) {*}
[0008,0005] (0002,              CT_INT) {1}
[0008,0006] (0052,             S_PVIRG) {;}
9     _d = _d / 1;
[0009,0001] (0001,                  ID) {_d}
[0009,0002] (0034,           OPR_IGUAL) {=}
[0009,0003] (0001,                  ID) {_d}
[0009,0004] (0032,             OPR_DIV) {/}
[0009,0005] (0002,              CT_INT) {1}
[0009,0006] (0052,             S_PVIRG) {;}
10     _d = _d % 1;
[0010,0001] (0001,                  ID) {_d}
[0010,0002] (0034,           OPR_IGUAL) {=}
[0010,0003] (0001,                  ID) {_d}
[0010,0004] (0033,             OPR_MOD) {%}
[0010,0005] (0002,              CT_INT) {1}
[0010,0006] (0052,             S_PVIRG) {;}
11 
12 
13     int _resultado = _a + _b * _d; # Ordem: Multiplica depois soma.
[0013,0001] (0010,              PR_INT) {int}
[0013,0002] (0001,                  ID) {_resultado}
[0013,0003] (0034,           OPR_IGUAL) {=}
[0013,0004] (0001,                  ID) {_a}
[0013,0005] (0029,             OPR_ADD) {+}
[0013,0006] (0001,                  ID) {_b}
[0013,0007] (0031,            OPR_MULT) {*}
[0013,0008] (0001,                  ID) {_d}
[0013,0009] (0052,             S_PVIRG) {;}
14 
15     return _resultado;
[0015,0001] (0008,           PR_RETURN) {return}
[0015,0002] (0001,                  ID) {_resultado}
[0015,0003] (0052,             S_PVIRG) {;}
16 }
[0016,0001] (0046,           CL_CHAVES) {}}
17 
18 function string _exemplo(){
[0018,0001] (0007,               PR_FN) {function}
[0018,0002] (0013,           PR_STRING) {string}
[0018,0003] (0001,                  ID) {_exemplo}
[0018,0004] (0047,              OP_PAR) {(}
[0018,0005] (0048,              CL_PAR) {)}
[0018,0006] (0045,           OP_CHAVES) {{}
19 
20 }
[0020,0001] (0046,           CL_CHAVES) {}}
21 
22 function main(){
[0022,0001] (0007,               PR_FN) {function}
[0022,0002] (0006,             PR_MAIN) {main}
[0022,0003] (0047,              OP_PAR) {(}
[0022,0004] (0048,              CL_PAR) {)}
[0022,0005] (0045,           OP_CHAVES) {{}
23 
24     #### DECLARAÇÃO ####
25 
26     int _a, _b;
[0026,0001] (0010,              PR_INT) {int}
[0026,0002] (0001,                  ID) {_a}
[0026,0003] (0051,              S_VIRG) {,}
[0026,0004] (0001,                  ID) {_b}
[0026,0005] (0052,             S_PVIRG) {;}
27     float _c = 5.5;
[0027,0001] (0011,            PR_FLOAT) {float}
[0027,0002] (0001,                  ID) {_c}
[0027,0003] (0034,           OPR_IGUAL) {=}
[0027,0005] (0003,            CT_FLOAT) {5.5}
[0027,0006] (0052,             S_PVIRG) {;}
28 
29     bool _TF = true;
[0029,0001] (0014,             PR_BOOL) {bool}
[0029,0002] (0001,                  ID) {_TF}
[0029,0003] (0034,           OPR_IGUAL) {=}
[0029,0004] (0022,             PR_TRUE) {true}
[0029,0005] (0052,             S_PVIRG) {;}
30 
31     string _String1 = "amor";
[0031,0001] (0013,           PR_STRING) {string}
[0031,0002] (0001,                  ID) {_String1}
[0031,0003] (0034,           OPR_IGUAL) {=}
[0031,0005] (0004,           CT_STRING) {"amor"}
[0031,0006] (0052,             S_PVIRG) {;}
32     string _String2 = "dadiva";
[0032,0001] (0013,           PR_STRING) {string}
[0032,0002] (0001,                  ID) {_String2}
[0032,0003] (0034,           OPR_IGUAL) {=}
[0032,0005] (0004,           CT_STRING) {"dadiva"}
[0032,0006] (0052,             S_PVIRG) {;}
33     char _Caracter = 'a';
[0033,0001] (0012,             PR_CHAR) {char}
[0033,0002] (0001,                  ID) {_Caracter}
[0033,0003] (0034,           OPR_IGUAL) {=}
[0033,0005] (0005,             CT_CHAR) {'a'}
[0033,0006] (0052,             S_PVIRG) {;}
34     array int _nomes;
[0034,0001] (0026,            PR_ARRAY) {array}
[0034,0002] (0010,              PR_INT) {int}
[0034,0003] (0001,                  ID) {_nomes}
[0034,0004] (0052,             S_PVIRG) {;}
35     string int;
[0035,0001] (0013,           PR_STRING) {string}
[0035,0002] (0010,              PR_INT) {int}
[0035,0003] (0052,             S_PVIRG) {;}
36     # array _Array <num> = [0] # [0, 1, 2, ..., 200]
37 
38 
39     #### LEITURA ####
40 
41     _a = SysIn()
[0041,0001] (0001,                  ID) {_a}
[0041,0002] (0034,           OPR_IGUAL) {=}
[0041,0003] (0015,            PR_SYSIN) {SysIn}
[0041,0004] (0047,              OP_PAR) {(}
[0041,0005] (0048,              CL_PAR) {)}
42     SysIn(_a, _b);
[0042,0001] (0015,            PR_SYSIN) {SysIn}
[0042,0002] (0047,              OP_PAR) {(}
[0042,0003] (0001,                  ID) {_a}
[0042,0004] (0051,              S_VIRG) {,}
[0042,0005] (0001,                  ID) {_b}
[0042,0006] (0048,              CL_PAR) {)}
[0042,0007] (0052,             S_PVIRG) {;}
43 
44     #### IMPRESSÃO ####
45 
46     SysOut(_a);
[0046,0001] (0016,           PR_SYSOUT) {SysOut}
[0046,0002] (0047,              OP_PAR) {(}
[0046,0003] (0001,                  ID) {_a}
[0046,0004] (0048,              CL_PAR) {)}
[0046,0005] (0052,             S_PVIRG) {;}
47     SysOut("Menor que 10. Resultado" + _resultado + "/n");
[0047,0001] (0016,           PR_SYSOUT) {SysOut}
[0047,0002] (0047,              OP_PAR) {(}
[0047,0004] (0004,           CT_STRING) {"Menor que 10. Resultado"}
[0047,0005] (0029,             OPR_ADD) {+}
[0047,0006] (0001,                  ID) {_resultado}
[0047,0007] (0029,             OPR_ADD) {+}
[0047,0009] (0004,           CT_STRING) {"/n"}
[0047,0010] (0048,              CL_PAR) {)}
[0047,0011] (0052,             S_PVIRG) {;}
48 
49     #### CHAMADA DE FUNÇÃO ####
50 
51     int _resultado = _operacao(_a, _b);
[0051,0001] (0010,              PR_INT) {int}
[0051,0002] (0001,                  ID) {_resultado}
[0051,0003] (0034,           OPR_IGUAL) {=}
[0051,0004] (0001,                  ID) {_operacao}
[0051,0005] (0047,              OP_PAR) {(}
[0051,0006] (0001,                  ID) {_a}
[0051,0007] (0051,              S_VIRG) {,}
[0051,0008] (0001,                  ID) {_b}
[0051,0009] (0048,              CL_PAR) {)}
[0051,0010] (0052,             S_PVIRG) {;}
52 
53     #### CONDICIONAIS ####
54 
55     if (_resultado < 10 and _resultado > 0) {
[0055,0001] (0017,               PR_IF) {if}
[0055,0002] (0047,              OP_PAR) {(}
[0055,0003] (0001,                  ID) {_resultado}
[0055,0004] (0038,           OPR_MENOR) {<}
[0055,0005] (0002,              CT_INT) {10}
[0055,0006] (0024,              PR_AND) {and}
[0055,0007] (0001,                  ID) {_resultado}
[0055,0008] (0037,           OPR_MAIOR) {>}
[0055,0009] (0002,              CT_INT) {0}
[0055,0010] (0048,              CL_PAR) {)}
[0055,0011] (0045,           OP_CHAVES) {{}
56         SysOut("Menor que 10. Resultado" + _resultado + "/n");
[0056,0001] (0016,           PR_SYSOUT) {SysOut}
[0056,0002] (0047,              OP_PAR) {(}
[0056,0004] (0004,           CT_STRING) {"Menor que 10. Resultado"}
[0056,0005] (0029,             OPR_ADD) {+}
[0056,0006] (0001,                  ID) {_resultado}
[0056,0007] (0029,             OPR_ADD) {+}
[0056,0009] (0004,           CT_STRING) {"/n"}
[0056,0010] (0048,              CL_PAR) {)}
[0056,0011] (0052,             S_PVIRG) {;}
57     } elif (_resultado == 10) {
[0057,0001] (0046,           CL_CHAVES) {}}
[0057,0002] (0018,             PR_ELIF) {elif}
[0057,0003] (0047,              OP_PAR) {(}
[0057,0004] (0001,                  ID) {_resultado}
[0057,0005] (0036,          OPR_DIGUAL) {==}
[0057,0006] (0002,              CT_INT) {10}
[0057,0007] (0048,              CL_PAR) {)}
[0057,0008] (0045,           OP_CHAVES) {{}
58 
59     } else (_resultado > 10 or _resultado > 15) {
[0059,0001] (0046,           CL_CHAVES) {}}
[0059,0002] (0019,             PR_ELSE) {else}
[0059,0003] (0047,              OP_PAR) {(}
[0059,0004] (0001,                  ID) {_resultado}
[0059,0005] (0037,           OPR_MAIOR) {>}
[0059,0006] (0002,              CT_INT) {10}
[0059,0007] (0025,               PR_OR) {or}
[0059,0008] (0001,                  ID) {_resultado}
[0059,0009] (0037,           OPR_MAIOR) {>}
[0059,0010] (0002,              CT_INT) {15}
[0059,0011] (0048,              CL_PAR) {)}
[0059,0012] (0045,           OP_CHAVES) {{}
60 
61     }
[0061,0001] (0046,           CL_CHAVES) {}}
62     
63     #### CONCATENAÇÃO ####
64 
65     string _resultado = _a & _String1
[0065,0001] (0013,           PR_STRING) {string}
[0065,0002] (0001,                  ID) {_resultado}
[0065,0003] (0034,           OPR_IGUAL) {=}
[0065,0004] (0001,                  ID) {_a}
[0065,0005] (0040,            OPR_CONC) {&}
[0065,0006] (0001,                  ID) {_String1}
66 
67     if (_String1 != _String2) {
[0067,0001] (0017,               PR_IF) {if}
[0067,0002] (0047,              OP_PAR) {(}
[0067,0003] (0001,                  ID) {_String1}
[0067,0004] (0035,             OPR_DIF) {!=}
[0067,0005] (0001,                  ID) {_String2}
[0067,0006] (0048,              CL_PAR) {)}
[0067,0007] (0045,           OP_CHAVES) {{}
68         string _String3 = _String1 & ' ' & _String2
[0068,0001] (0013,           PR_STRING) {string}
[0068,0002] (0001,                  ID) {_String3}
[0068,0003] (0034,           OPR_IGUAL) {=}
[0068,0004] (0001,                  ID) {_String1}
[0068,0005] (0040,            OPR_CONC) {&}
[0068,0007] (0005,             CT_CHAR) {' '}
[0068,0008] (0040,            OPR_CONC) {&}
[0068,0009] (0001,                  ID) {_String2}
69     }
[0069,0001] (0046,           CL_CHAVES) {}}
70 
71     int _i; # _i = 0
[0071,0001] (0010,              PR_INT) {int}
[0071,0002] (0001,                  ID) {_i}
[0071,0003] (0052,             S_PVIRG) {;}
72 
73     #### LOOPS ####
74 
75     for (_i; [0,10]; 5) { # for (contador; init, finish; incremento) -> Quando não especificado o valor o incremento, deve-se assumir como 1. 
[0075,0001] (0021,              PR_FOR) {for}
[0075,0002] (0047,              OP_PAR) {(}
[0075,0003] (0001,                  ID) {_i}
[0075,0004] (0052,             S_PVIRG) {;}
[0075,0005] (0049,             OP_COLC) {[}
[0075,0006] (0002,              CT_INT) {0}
[0075,0007] (0051,              S_VIRG) {,}
[0075,0008] (0002,              CT_INT) {10}
[0075,0009] (0050,             CL_COLC) {]}
[0075,0010] (0052,             S_PVIRG) {;}
[0075,0011] (0002,              CT_INT) {5}
[0075,0012] (0048,              CL_PAR) {)}
[0075,0013] (0045,           OP_CHAVES) {{}
76 
77     }
[0077,0001] (0046,           CL_CHAVES) {}}
78 
79     while (_i > 10){
[0079,0001] (0020,            PR_WHILE) {while}
[0079,0002] (0047,              OP_PAR) {(}
[0079,0003] (0001,                  ID) {_i}
[0079,0004] (0037,           OPR_MAIOR) {>}
[0079,0005] (0002,              CT_INT) {10}
[0079,0006] (0048,              CL_PAR) {)}
[0079,0007] (0045,           OP_CHAVES) {{}
80         _i = _i + 1;
[0080,0001] (0001,                  ID) {_i}
[0080,0002] (0034,           OPR_IGUAL) {=}
[0080,0003] (0001,                  ID) {_i}
[0080,0004] (0029,             OPR_ADD) {+}
[0080,0005] (0002,              CT_INT) {1}
[0080,0006] (0052,             S_PVIRG) {;}
81     }
[0081,0001] (0046,           CL_CHAVES) {}}
82 }
[0082,0001] (0046,           CL_CHAVES) {}}
83 
84 
[0084,0000] (0000,                 EOF) {EOF}
