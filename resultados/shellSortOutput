1 function void _shellSort(array int _nums, int _numsSize) {
[0001,0001] (0007,               PR_FN) {function}
[0001,0002] (0009,             PR_VOID) {void}
[0001,0003] (0001,                  ID) {_shellSort}
[0001,0004] (0047,              OP_PAR) {(}
[0001,0005] (0026,            PR_ARRAY) {array}
[0001,0006] (0010,              PR_INT) {int}
[0001,0007] (0001,                  ID) {_nums}
[0001,0008] (0051,              S_VIRG) {,}
[0001,0009] (0010,              PR_INT) {int}
[0001,0010] (0001,                  ID) {_numsSize}
[0001,0011] (0048,              CL_PAR) {)}
[0001,0012] (0045,           OP_CHAVES) {{}
2     int _h = 1;
[0002,0001] (0010,              PR_INT) {int}
[0002,0002] (0001,                  ID) {_h}
[0002,0003] (0034,           OPR_IGUAL) {=}
[0002,0004] (0002,              CT_INT) {1}
[0002,0005] (0052,             S_PVIRG) {;}
3 
4     while (_h < _numsSize) {
[0004,0001] (0020,            PR_WHILE) {while}
[0004,0002] (0047,              OP_PAR) {(}
[0004,0003] (0001,                  ID) {_h}
[0004,0004] (0038,           OPR_MENOR) {<}
[0004,0005] (0001,                  ID) {_numsSize}
[0004,0006] (0048,              CL_PAR) {)}
[0004,0007] (0045,           OP_CHAVES) {{}
5         _h = _h * 3 + 1;
[0005,0001] (0001,                  ID) {_h}
[0005,0002] (0034,           OPR_IGUAL) {=}
[0005,0003] (0001,                  ID) {_h}
[0005,0004] (0031,            OPR_MULT) {*}
[0005,0005] (0002,              CT_INT) {3}
[0005,0006] (0029,             OPR_ADD) {+}
[0005,0007] (0002,              CT_INT) {1}
[0005,0008] (0052,             S_PVIRG) {;}
6     }
[0006,0001] (0046,           CL_CHAVES) {}}
7 
8     _h = _h / 3;
[0008,0001] (0001,                  ID) {_h}
[0008,0002] (0034,           OPR_IGUAL) {=}
[0008,0003] (0001,                  ID) {_h}
[0008,0004] (0032,             OPR_DIV) {/}
[0008,0005] (0002,              CT_INT) {3}
[0008,0006] (0052,             S_PVIRG) {;}
9     int _c, _j, _i;
[0009,0001] (0010,              PR_INT) {int}
[0009,0002] (0001,                  ID) {_c}
[0009,0003] (0051,              S_VIRG) {,}
[0009,0004] (0001,                  ID) {_j}
[0009,0005] (0051,              S_VIRG) {,}
[0009,0006] (0001,                  ID) {_i}
[0009,0007] (0052,             S_PVIRG) {;}
10 
11     while (_h > 0) {
[0011,0001] (0020,            PR_WHILE) {while}
[0011,0002] (0047,              OP_PAR) {(}
[0011,0003] (0001,                  ID) {_h}
[0011,0004] (0037,           OPR_MAIOR) {>}
[0011,0005] (0002,              CT_INT) {0}
[0011,0006] (0048,              CL_PAR) {)}
[0011,0007] (0045,           OP_CHAVES) {{}
12         for(_i = _h, _i < _numsSize) {
[0012,0001] (0021,              PR_FOR) {for}
[0012,0002] (0047,              OP_PAR) {(}
[0012,0003] (0001,                  ID) {_i}
[0012,0004] (0034,           OPR_IGUAL) {=}
[0012,0005] (0001,                  ID) {_h}
[0012,0006] (0051,              S_VIRG) {,}
[0012,0007] (0001,                  ID) {_i}
[0012,0008] (0038,           OPR_MENOR) {<}
[0012,0009] (0001,                  ID) {_numsSize}
[0012,0010] (0048,              CL_PAR) {)}
[0012,0011] (0045,           OP_CHAVES) {{}
13             _c = _nums[_i];
[0013,0001] (0001,                  ID) {_c}
[0013,0002] (0034,           OPR_IGUAL) {=}
[0013,0003] (0001,                  ID) {_nums}
[0013,0004] (0049,             OP_COLC) {[}
[0013,0005] (0001,                  ID) {_i}
[0013,0006] (0050,             CL_COLC) {]}
[0013,0007] (0052,             S_PVIRG) {;}
14             _j = _i;
[0014,0001] (0001,                  ID) {_j}
[0014,0002] (0034,           OPR_IGUAL) {=}
[0014,0003] (0001,                  ID) {_i}
[0014,0004] (0052,             S_PVIRG) {;}
15             while (_j >= _h and _nums[_j - _h] > _c) {
[0015,0001] (0020,            PR_WHILE) {while}
[0015,0002] (0047,              OP_PAR) {(}
[0015,0003] (0001,                  ID) {_j}
[0015,0004] (0039,         OPR_MAIORIG) {>=}
[0015,0005] (0001,                  ID) {_h}
[0015,0006] (0024,              PR_AND) {and}
[0015,0007] (0001,                  ID) {_nums}
[0015,0008] (0049,             OP_COLC) {[}
[0015,0009] (0001,                  ID) {_j}
[0015,0010] (0030,             OPR_SUB) {-}
[0015,0011] (0001,                  ID) {_h}
[0015,0012] (0050,             CL_COLC) {]}
[0015,0013] (0037,           OPR_MAIOR) {>}
[0015,0014] (0001,                  ID) {_c}
[0015,0015] (0048,              CL_PAR) {)}
[0015,0016] (0045,           OP_CHAVES) {{}
16                 _nums[_j] = _nums[_j - _h];
[0016,0001] (0001,                  ID) {_nums}
[0016,0002] (0049,             OP_COLC) {[}
[0016,0003] (0001,                  ID) {_j}
[0016,0004] (0050,             CL_COLC) {]}
[0016,0005] (0034,           OPR_IGUAL) {=}
[0016,0006] (0001,                  ID) {_nums}
[0016,0007] (0049,             OP_COLC) {[}
[0016,0008] (0001,                  ID) {_j}
[0016,0009] (0030,             OPR_SUB) {-}
[0016,0010] (0001,                  ID) {_h}
[0016,0011] (0050,             CL_COLC) {]}
[0016,0012] (0052,             S_PVIRG) {;}
17                 _j = _j - _h;
[0017,0001] (0001,                  ID) {_j}
[0017,0002] (0034,           OPR_IGUAL) {=}
[0017,0003] (0001,                  ID) {_j}
[0017,0004] (0030,             OPR_SUB) {-}
[0017,0005] (0001,                  ID) {_h}
[0017,0006] (0052,             S_PVIRG) {;}
18             }
[0018,0001] (0046,           CL_CHAVES) {}}
19             _nums[_j] = _c;
[0019,0001] (0001,                  ID) {_nums}
[0019,0002] (0049,             OP_COLC) {[}
[0019,0003] (0001,                  ID) {_j}
[0019,0004] (0050,             CL_COLC) {]}
[0019,0005] (0034,           OPR_IGUAL) {=}
[0019,0006] (0001,                  ID) {_c}
[0019,0007] (0052,             S_PVIRG) {;}
20         }
[0020,0001] (0046,           CL_CHAVES) {}}
21         _h = _h / 2;
[0021,0001] (0001,                  ID) {_h}
[0021,0002] (0034,           OPR_IGUAL) {=}
[0021,0003] (0001,                  ID) {_h}
[0021,0004] (0032,             OPR_DIV) {/}
[0021,0005] (0002,              CT_INT) {2}
[0021,0006] (0052,             S_PVIRG) {;}
22     }
[0022,0001] (0046,           CL_CHAVES) {}}
23 }
[0023,0001] (0046,           CL_CHAVES) {}}
24 
25 function void main() {
[0025,0001] (0007,               PR_FN) {function}
[0025,0002] (0009,             PR_VOID) {void}
[0025,0003] (0006,             PR_MAIN) {main}
[0025,0004] (0047,              OP_PAR) {(}
[0025,0005] (0048,              CL_PAR) {)}
[0025,0006] (0045,           OP_CHAVES) {{}
26     int _n;
[0026,0001] (0010,              PR_INT) {int}
[0026,0002] (0001,                  ID) {_n}
[0026,0003] (0052,             S_PVIRG) {;}
27 
28     SysOut("Insira o tamanho do array:");
[0028,0001] (0016,           PR_SYSOUT) {SysOut}
[0028,0002] (0047,              OP_PAR) {(}
[0028,0004] (0004,           CT_STRING) {"Insira o tamanho do array:"}
[0028,0005] (0048,              CL_PAR) {)}
[0028,0006] (0052,             S_PVIRG) {;}
29     SysIn(_n);
[0029,0001] (0015,            PR_SYSIN) {SysIn}
[0029,0002] (0047,              OP_PAR) {(}
[0029,0003] (0001,                  ID) {_n}
[0029,0004] (0048,              CL_PAR) {)}
[0029,0005] (0052,             S_PVIRG) {;}
30 
31     array int _valores[_n];
[0031,0001] (0026,            PR_ARRAY) {array}
[0031,0002] (0010,              PR_INT) {int}
[0031,0003] (0001,                  ID) {_valores}
[0031,0004] (0049,             OP_COLC) {[}
[0031,0005] (0001,                  ID) {_n}
[0031,0006] (0050,             CL_COLC) {]}
[0031,0007] (0052,             S_PVIRG) {;}
32     SysIn("Insira os valores do array:");
[0032,0001] (0015,            PR_SYSIN) {SysIn}
[0032,0002] (0047,              OP_PAR) {(}
[0032,0004] (0004,           CT_STRING) {"Insira os valores do array:"}
[0032,0005] (0048,              CL_PAR) {)}
[0032,0006] (0052,             S_PVIRG) {;}
33 
34     int _i;
[0034,0001] (0010,              PR_INT) {int}
[0034,0002] (0001,                  ID) {_i}
[0034,0003] (0052,             S_PVIRG) {;}
35     for(_i = 0, _i < _n) {
[0035,0001] (0021,              PR_FOR) {for}
[0035,0002] (0047,              OP_PAR) {(}
[0035,0003] (0001,                  ID) {_i}
[0035,0004] (0034,           OPR_IGUAL) {=}
[0035,0005] (0002,              CT_INT) {0}
[0035,0006] (0051,              S_VIRG) {,}
[0035,0007] (0001,                  ID) {_i}
[0035,0008] (0038,           OPR_MENOR) {<}
[0035,0009] (0001,                  ID) {_n}
[0035,0010] (0048,              CL_PAR) {)}
[0035,0011] (0045,           OP_CHAVES) {{}
36         SysIn(_valores[_i]);
[0036,0001] (0015,            PR_SYSIN) {SysIn}
[0036,0002] (0047,              OP_PAR) {(}
[0036,0003] (0001,                  ID) {_valores}
[0036,0004] (0049,             OP_COLC) {[}
[0036,0005] (0001,                  ID) {_i}
[0036,0006] (0050,             CL_COLC) {]}
[0036,0007] (0048,              CL_PAR) {)}
[0036,0008] (0052,             S_PVIRG) {;}
37     }
[0037,0001] (0046,           CL_CHAVES) {}}
38 
39     SysOut("Array antes de organizar:");
[0039,0001] (0016,           PR_SYSOUT) {SysOut}
[0039,0002] (0047,              OP_PAR) {(}
[0039,0004] (0004,           CT_STRING) {"Array antes de organizar:"}
[0039,0005] (0048,              CL_PAR) {)}
[0039,0006] (0052,             S_PVIRG) {;}
40     for (_i = 0, _i < _n) {
[0040,0001] (0021,              PR_FOR) {for}
[0040,0002] (0047,              OP_PAR) {(}
[0040,0003] (0001,                  ID) {_i}
[0040,0004] (0034,           OPR_IGUAL) {=}
[0040,0005] (0002,              CT_INT) {0}
[0040,0006] (0051,              S_VIRG) {,}
[0040,0007] (0001,                  ID) {_i}
[0040,0008] (0038,           OPR_MENOR) {<}
[0040,0009] (0001,                  ID) {_n}
[0040,0010] (0048,              CL_PAR) {)}
[0040,0011] (0045,           OP_CHAVES) {{}
41         SysOut(_valores[_i]);
[0041,0001] (0016,           PR_SYSOUT) {SysOut}
[0041,0002] (0047,              OP_PAR) {(}
[0041,0003] (0001,                  ID) {_valores}
[0041,0004] (0049,             OP_COLC) {[}
[0041,0005] (0001,                  ID) {_i}
[0041,0006] (0050,             CL_COLC) {]}
[0041,0007] (0048,              CL_PAR) {)}
[0041,0008] (0052,             S_PVIRG) {;}
42     }
[0042,0001] (0046,           CL_CHAVES) {}}
43 
44     _shellSort(_valores, _n);
[0044,0001] (0001,                  ID) {_shellSort}
[0044,0002] (0047,              OP_PAR) {(}
[0044,0003] (0001,                  ID) {_valores}
[0044,0004] (0051,              S_VIRG) {,}
[0044,0005] (0001,                  ID) {_n}
[0044,0006] (0048,              CL_PAR) {)}
[0044,0007] (0052,             S_PVIRG) {;}
45 
46     SysOut("Array depois de organizar:");
[0046,0001] (0016,           PR_SYSOUT) {SysOut}
[0046,0002] (0047,              OP_PAR) {(}
[0046,0004] (0004,           CT_STRING) {"Array depois de organizar:"}
[0046,0005] (0048,              CL_PAR) {)}
[0046,0006] (0052,             S_PVIRG) {;}
47     for (_i = 0, _i < _n) {
[0047,0001] (0021,              PR_FOR) {for}
[0047,0002] (0047,              OP_PAR) {(}
[0047,0003] (0001,                  ID) {_i}
[0047,0004] (0034,           OPR_IGUAL) {=}
[0047,0005] (0002,              CT_INT) {0}
[0047,0006] (0051,              S_VIRG) {,}
[0047,0007] (0001,                  ID) {_i}
[0047,0008] (0038,           OPR_MENOR) {<}
[0047,0009] (0001,                  ID) {_n}
[0047,0010] (0048,              CL_PAR) {)}
[0047,0011] (0045,           OP_CHAVES) {{}
48         SysOut(_valores[_i]);
[0048,0001] (0016,           PR_SYSOUT) {SysOut}
[0048,0002] (0047,              OP_PAR) {(}
[0048,0003] (0001,                  ID) {_valores}
[0048,0004] (0049,             OP_COLC) {[}
[0048,0005] (0001,                  ID) {_i}
[0048,0006] (0050,             CL_COLC) {]}
[0048,0007] (0048,              CL_PAR) {)}
[0048,0008] (0052,             S_PVIRG) {;}
49     }
[0049,0001] (0046,           CL_CHAVES) {}}
50 }
[0050,0001] (0046,           CL_CHAVES) {}}
[0050,0001] (0000,                 EOF) {EOF}
