1 function void _shellSort(array int _nums, int _numsSize) {
              [0001,0008] (0007,               PR_FN) {function}
              [0001,0013] (0009,             PR_VOID) {void}
              [0001,0024] (0001,                  ID) {_shellSort}
              [0001,0025] (0047,              OP_PAR) {(}
              [0001,0030] (0024,            PR_ARRAY) {array}
              [0001,0034] (0010,              PR_INT) {int}
              [0001,0040] (0001,                  ID) {_nums}
              [0001,0041] (0051,              S_VIRG) {,}
              [0001,0045] (0010,              PR_INT) {int}
              [0001,0055] (0001,                  ID) {_numsSize}
              [0001,0056] (0048,              CL_PAR) {)}
              [0001,0058] (0045,           OP_CHAVES) {{}
2     int _h = 1;
              [0002,0007] (0010,              PR_INT) {int}
              [0002,0010] (0001,                  ID) {_h}
              [0002,0011] (0033,           OPR_IGUAL) {=}
              [0002,0013] (0002,              CT_INT) {1}
              [0002,0014] (0052,             S_PVIRG) {;}
3 
4     while (_h < _numsSize) {
              [0004,0009] (0020,            PR_WHILE) {while}
              [0004,0011] (0047,              OP_PAR) {(}
              [0004,0013] (0001,                  ID) {_h}
              [0004,0014] (0037,           OPR_MENOR) {<}
              [0004,0024] (0001,                  ID) {_numsSize}
              [0004,0025] (0048,              CL_PAR) {)}
              [0004,0027] (0045,           OP_CHAVES) {{}
5         _h = _h * 3 + 1;
              [0005,0010] (0001,                  ID) {_h}
              [0005,0011] (0033,           OPR_IGUAL) {=}
              [0005,0014] (0001,                  ID) {_h}
              [0005,0016] (0030,            OPR_MULT) {*}
              [0005,0018] (0002,              CT_INT) {3}
              [0005,0020] (0028,             OPR_ADD) {+}
              [0005,0022] (0002,              CT_INT) {1}
              [0005,0023] (0052,             S_PVIRG) {;}
6     }
              [0006,0005] (0046,           CL_CHAVES) {}}
7 
8     _h = _h / 3;
              [0008,0006] (0001,                  ID) {_h}
              [0008,0007] (0033,           OPR_IGUAL) {=}
              [0008,0010] (0001,                  ID) {_h}
              [0008,0012] (0031,             OPR_DIV) {/}
              [0008,0014] (0002,              CT_INT) {3}
              [0008,0015] (0052,             S_PVIRG) {;}
9     int _c, _j, _i;
              [0009,0007] (0010,              PR_INT) {int}
              [0009,0010] (0001,                  ID) {_c}
              [0009,0011] (0051,              S_VIRG) {,}
              [0009,0014] (0001,                  ID) {_j}
              [0009,0015] (0051,              S_VIRG) {,}
              [0009,0018] (0001,                  ID) {_i}
              [0009,0019] (0052,             S_PVIRG) {;}
10 
11     while (_h > 0) {
              [0011,0009] (0020,            PR_WHILE) {while}
              [0011,0011] (0047,              OP_PAR) {(}
              [0011,0013] (0001,                  ID) {_h}
              [0011,0014] (0036,           OPR_MAIOR) {>}
              [0011,0016] (0002,              CT_INT) {0}
              [0011,0017] (0048,              CL_PAR) {)}
              [0011,0019] (0045,           OP_CHAVES) {{}
12         for(_i = _h, _numsSize) {
              [0012,0011] (0021,              PR_FOR) {for}
              [0012,0012] (0047,              OP_PAR) {(}
              [0012,0014] (0001,                  ID) {_i}
              [0012,0015] (0033,           OPR_IGUAL) {=}
              [0012,0018] (0001,                  ID) {_h}
              [0012,0019] (0051,              S_VIRG) {,}
              [0012,0029] (0001,                  ID) {_numsSize}
              [0012,0030] (0048,              CL_PAR) {)}
              [0012,0032] (0045,           OP_CHAVES) {{}
13             _c = _nums[_i];
              [0013,0014] (0001,                  ID) {_c}
              [0013,0015] (0033,           OPR_IGUAL) {=}
              [0013,0021] (0001,                  ID) {_nums}
              [0013,0022] (0049,             OP_COLC) {[}
              [0013,0024] (0001,                  ID) {_i}
              [0013,0025] (0050,             CL_COLC) {]}
              [0013,0026] (0052,             S_PVIRG) {;}
14             _j = _i;
              [0014,0014] (0001,                  ID) {_j}
              [0014,0015] (0033,           OPR_IGUAL) {=}
              [0014,0018] (0001,                  ID) {_i}
              [0014,0019] (0052,             S_PVIRG) {;}
15             while (_j >= _h and _nums[_j - _h] > _c) {
              [0015,0017] (0020,            PR_WHILE) {while}
              [0015,0019] (0047,              OP_PAR) {(}
              [0015,0021] (0001,                  ID) {_j}
              [0015,0023] (0038,         OPR_MAIORIG) {>=}
              [0015,0026] (0001,                  ID) {_h}
              [0015,0030] (0042,             OPR_AND) {and}
              [0015,0036] (0001,                  ID) {_nums}
              [0015,0037] (0049,             OP_COLC) {[}
              [0015,0039] (0001,                  ID) {_j}
              [0015,0041] (0029,             OPR_SUB) {-}
              [0015,0044] (0001,                  ID) {_h}
              [0015,0045] (0050,             CL_COLC) {]}
              [0015,0046] (0036,           OPR_MAIOR) {>}
              [0015,0049] (0001,                  ID) {_c}
              [0015,0050] (0048,              CL_PAR) {)}
              [0015,0052] (0045,           OP_CHAVES) {{}
16                 _nums[_j] = _nums[_j - _h];
              [0016,0021] (0001,                  ID) {_nums}
              [0016,0022] (0049,             OP_COLC) {[}
              [0016,0024] (0001,                  ID) {_j}
              [0016,0025] (0050,             CL_COLC) {]}
              [0016,0026] (0033,           OPR_IGUAL) {=}
              [0016,0032] (0001,                  ID) {_nums}
              [0016,0033] (0049,             OP_COLC) {[}
              [0016,0035] (0001,                  ID) {_j}
              [0016,0037] (0029,             OPR_SUB) {-}
              [0016,0040] (0001,                  ID) {_h}
              [0016,0041] (0050,             CL_COLC) {]}
              [0016,0042] (0052,             S_PVIRG) {;}
17                 _j = _j - _h;
              [0017,0018] (0001,                  ID) {_j}
              [0017,0019] (0033,           OPR_IGUAL) {=}
              [0017,0022] (0001,                  ID) {_j}
              [0017,0024] (0029,             OPR_SUB) {-}
              [0017,0027] (0001,                  ID) {_h}
              [0017,0028] (0052,             S_PVIRG) {;}
18             }
              [0018,0013] (0046,           CL_CHAVES) {}}
19             _nums[_j] = _c;
              [0019,0017] (0001,                  ID) {_nums}
              [0019,0018] (0049,             OP_COLC) {[}
              [0019,0020] (0001,                  ID) {_j}
              [0019,0021] (0050,             CL_COLC) {]}
              [0019,0022] (0033,           OPR_IGUAL) {=}
              [0019,0025] (0001,                  ID) {_c}
              [0019,0026] (0052,             S_PVIRG) {;}
20         }
              [0020,0009] (0046,           CL_CHAVES) {}}
21         _h = _h / 2;
              [0021,0010] (0001,                  ID) {_h}
              [0021,0011] (0033,           OPR_IGUAL) {=}
              [0021,0014] (0001,                  ID) {_h}
              [0021,0016] (0031,             OPR_DIV) {/}
              [0021,0018] (0002,              CT_INT) {2}
              [0021,0019] (0052,             S_PVIRG) {;}
22     }
              [0022,0005] (0046,           CL_CHAVES) {}}
23 }
              [0023,0001] (0046,           CL_CHAVES) {}}
24 
25 function main() {
              [0025,0008] (0007,               PR_FN) {function}
              [0025,0013] (0006,             PR_MAIN) {main}
              [0025,0014] (0047,              OP_PAR) {(}
              [0025,0015] (0048,              CL_PAR) {)}
              [0025,0017] (0045,           OP_CHAVES) {{}
26     int _n;
              [0026,0007] (0010,              PR_INT) {int}
              [0026,0010] (0001,                  ID) {_n}
              [0026,0011] (0052,             S_PVIRG) {;}
27 
28     SysOut("Insira o tamanho do array:");
              [0028,0010] (0016,           PR_SYSOUT) {SysOut}
              [0028,0011] (0047,              OP_PAR) {(}
              [0028,0012] (0004,           CT_STRING) {"Insira o tamanho do array:"}
              [0028,0013] (0048,              CL_PAR) {)}
              [0028,0014] (0052,             S_PVIRG) {;}
29     SysIn(_n);
              [0029,0009] (0015,            PR_SYSIN) {SysIn}
              [0029,0010] (0047,              OP_PAR) {(}
              [0029,0012] (0001,                  ID) {_n}
              [0029,0013] (0048,              CL_PAR) {)}
              [0029,0014] (0052,             S_PVIRG) {;}
30 
31     array int _valores[_n];
              [0031,0009] (0024,            PR_ARRAY) {array}
              [0031,0013] (0010,              PR_INT) {int}
              [0031,0022] (0001,                  ID) {_valores}
              [0031,0023] (0049,             OP_COLC) {[}
              [0031,0025] (0001,                  ID) {_n}
              [0031,0026] (0050,             CL_COLC) {]}
              [0031,0027] (0052,             S_PVIRG) {;}
32     SysOut("Insira os valores do array:");
              [0032,0010] (0016,           PR_SYSOUT) {SysOut}
              [0032,0011] (0047,              OP_PAR) {(}
              [0032,0012] (0004,           CT_STRING) {"Insira os valores do array:"}
              [0032,0013] (0048,              CL_PAR) {)}
              [0032,0014] (0052,             S_PVIRG) {;}
33 
34     int _i;
              [0034,0007] (0010,              PR_INT) {int}
              [0034,0010] (0001,                  ID) {_i}
              [0034,0011] (0052,             S_PVIRG) {;}
35     for(_i = 0, _n) {
              [0035,0007] (0021,              PR_FOR) {for}
              [0035,0008] (0047,              OP_PAR) {(}
              [0035,0010] (0001,                  ID) {_i}
              [0035,0011] (0033,           OPR_IGUAL) {=}
              [0035,0013] (0002,              CT_INT) {0}
              [0035,0014] (0051,              S_VIRG) {,}
              [0035,0017] (0001,                  ID) {_n}
              [0035,0018] (0048,              CL_PAR) {)}
              [0035,0020] (0045,           OP_CHAVES) {{}
36         SysIn(_valores[_i]);
              [0036,0013] (0015,            PR_SYSIN) {SysIn}
              [0036,0014] (0047,              OP_PAR) {(}
              [0036,0022] (0001,                  ID) {_valores}
              [0036,0023] (0049,             OP_COLC) {[}
              [0036,0025] (0001,                  ID) {_i}
              [0036,0026] (0050,             CL_COLC) {]}
              [0036,0027] (0048,              CL_PAR) {)}
              [0036,0028] (0052,             S_PVIRG) {;}
37     }
              [0037,0005] (0046,           CL_CHAVES) {}}
38 
39     SysOut("Array antes de organizar:");
              [0039,0010] (0016,           PR_SYSOUT) {SysOut}
              [0039,0011] (0047,              OP_PAR) {(}
              [0039,0012] (0004,           CT_STRING) {"Array antes de organizar:"}
              [0039,0013] (0048,              CL_PAR) {)}
              [0039,0014] (0052,             S_PVIRG) {;}
40     for (_i = 0, _n) {
              [0040,0007] (0021,              PR_FOR) {for}
              [0040,0009] (0047,              OP_PAR) {(}
              [0040,0011] (0001,                  ID) {_i}
              [0040,0012] (0033,           OPR_IGUAL) {=}
              [0040,0014] (0002,              CT_INT) {0}
              [0040,0015] (0051,              S_VIRG) {,}
              [0040,0018] (0001,                  ID) {_n}
              [0040,0019] (0048,              CL_PAR) {)}
              [0040,0021] (0045,           OP_CHAVES) {{}
41         SysOut(_valores[_i]);
              [0041,0014] (0016,           PR_SYSOUT) {SysOut}
              [0041,0015] (0047,              OP_PAR) {(}
              [0041,0023] (0001,                  ID) {_valores}
              [0041,0024] (0049,             OP_COLC) {[}
              [0041,0026] (0001,                  ID) {_i}
              [0041,0027] (0050,             CL_COLC) {]}
              [0041,0028] (0048,              CL_PAR) {)}
              [0041,0029] (0052,             S_PVIRG) {;}
42     }
              [0042,0005] (0046,           CL_CHAVES) {}}
43 
44     _shellSort(_valores, _n);
              [0044,0014] (0001,                  ID) {_shellSort}
              [0044,0015] (0047,              OP_PAR) {(}
              [0044,0023] (0001,                  ID) {_valores}
              [0044,0024] (0051,              S_VIRG) {,}
              [0044,0027] (0001,                  ID) {_n}
              [0044,0028] (0048,              CL_PAR) {)}
              [0044,0029] (0052,             S_PVIRG) {;}
45 
46     SysOut("Array depois de organizar:");
              [0046,0010] (0016,           PR_SYSOUT) {SysOut}
              [0046,0011] (0047,              OP_PAR) {(}
              [0046,0012] (0004,           CT_STRING) {"Array depois de organizar:"}
              [0046,0013] (0048,              CL_PAR) {)}
              [0046,0014] (0052,             S_PVIRG) {;}
47     for (_i = 0, _n) {
              [0047,0007] (0021,              PR_FOR) {for}
              [0047,0009] (0047,              OP_PAR) {(}
              [0047,0011] (0001,                  ID) {_i}
              [0047,0012] (0033,           OPR_IGUAL) {=}
              [0047,0014] (0002,              CT_INT) {0}
              [0047,0015] (0051,              S_VIRG) {,}
              [0047,0018] (0001,                  ID) {_n}
              [0047,0019] (0048,              CL_PAR) {)}
              [0047,0021] (0045,           OP_CHAVES) {{}
48         SysOut(_valores[_i]);
              [0048,0014] (0016,           PR_SYSOUT) {SysOut}
              [0048,0015] (0047,              OP_PAR) {(}
              [0048,0023] (0001,                  ID) {_valores}
              [0048,0024] (0049,             OP_COLC) {[}
              [0048,0026] (0001,                  ID) {_i}
              [0048,0027] (0050,             CL_COLC) {]}
              [0048,0028] (0048,              CL_PAR) {)}
              [0048,0029] (0052,             S_PVIRG) {;}
49     }
              [0049,0005] (0046,           CL_CHAVES) {}}
50 }
              [0050,0001] (0046,           CL_CHAVES) {}}
              [0050,0002] (0000,                 EOF) {EOF}
